{"version":3,"sources":["node_modules/browser-pack/_prelude.js","source/Json.ts","source/Main.ts"],"names":[],"mappings":"AAAA;;;;ACAA,iBAAwB,AAAQ,KAAE,AAAa;AAC7C,QAAI,AAAG,MAAG,IAAI,AAAc,AAAE,AAAC;AAC/B,AAAG,QAAC,AAAI,KAAC,AAAK,OAAE,AAAG,KAAE,AAAI,AAAC,AAAC;AAC3B,AAAG,QAAC,AAAY,eAAG,AAAM,AAAC;AAC1B,AAAG,QAAC,AAAM,SAAG;AACX,YAAI,AAAM,SAAG,AAAG,IAAC,AAAM,AAAC;AACxB,AAAE,AAAC,YAAC,AAAM,WAAK,AAAG,AAAC,KAAC,AAAC;AACnB,AAAQ,qBAAC,AAAI,MAAE,AAAG,IAAC,AAAQ,AAAC,AAAC,AAC/B;AAAC,AAAC,AAAI,eAAC,AAAC;AACN,AAAQ,qBAAC,AAAM,QAAE,AAAG,IAAC,AAAQ,AAAC,AAAC,AACjC;AAAC,AACH;AAAC,AAAC;AACF,AAAG,QAAC,AAAI,AAAE,AAAC,AACb;AAAC;AAbD,kBAaC;AAAA,AAAC;;;;;;ACbF,qBAAiC;AAQjC,6BAA6B,AAAc,GAAE,AAAc;AACzD,AAAM,WAAE,AAAC,EAAC,AAAa,gBAAG,AAAC,EAAC,AAAa,AAAC,AAC5C;AAAC;AAED,oBAAoB,AAAiB,WAAE,AAAmB;AACtD,AAAI,SAAC,AAAI,KAAC,AAAmB,AAAC,AAAC;AAC/B,QAAI,AAAY,eAAG,IAAI,AAAK,MAAC,AAAe,AAAC,AAAC;AAC9C,AAAG,SAAC,IAAI,AAAC,IAAC,AAAC,GAAC,AAAC,IAAC,AAAI,KAAC,AAAM,QAAC,AAAC,AAAE,KAAC,AAAC;AAC3B,YAAI,AAAW,cAAG,AAAI,KAAC,AAAC,AAAC,AAAC;AAC1B,AAAE,YAAC,AAAY,aAAC,AAAO,QAAC,AAAW,YAAC,AAAK,AAAC,UAAI,CAAC,AAAC,AAAC,GAAC,AAAC;AAC/C,gBAAI,AAAc,iBAAG,AAAQ,SAAC,AAAa,cAAC,AAAK,AAAC,AAAC;AACnD,gBAAI,AAAe,kBAAG,AAAY,eAAG,AAAW,YAAC,AAAQ,WAAG,AAAuB,AAAC;AACpF,AAAe,+BAAI,AAAW,YAAC,AAAK,AAAC;AACrC,AAAe,+BAAI,AAAW,AAAC;AAC/B,AAAc,2BAAC,AAAS,YAAG,AAAe,AAAC;AAC3C,AAAQ,qBAAC,AAAc,eAAC,AAAS,AAAC,WAAC,AAAW,YAAC,AAAc,AAAC,AAAC,AACnE;AAAC,AACL;AAAC,AACL;AAAC;AAED,gCAAgC,AAAiB,WAAE,AAAW;AAC1D,QAAI,AAAW,cAAG,qBAAS,AAAa,OAAE,AAAmB;AACzD,AAAE,AAAC,YAAC,AAAK,UAAK,AAAI,AAAC,MAAC,AAAC;AACjB,AAAO,oBAAC,AAAG,IAAC,AAAuB,0BAAG,AAAK,AAAC,AAAC,AACjD;AAAC,AAAC,AAAI,eAAC,AAAC;AACJ,AAAU,uBAAC,AAAS,WAAE,AAAI,AAAC,AAAC,AAChC;AAAC,AACL;AAAC;AACD,WAAO,QAAC,AAAG,KAAE,AAAW,AAAC,AAAC,AAC9B;AAAC;AACK,AAAO,OAAC,AAAsB,yBAAG,AAAsB,AAAC","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export function getJson(url: any, callback: any) {\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', url, true);\n  xhr.responseType = 'json';\n  xhr.onload = function() {\n    var status = xhr.status;\n    if (status === 200) {\n      callback(null, xhr.response);\n    } else {\n      callback(status, xhr.response);\n    }\n  };\n  xhr.send();\n};\n","import { getJson } from \"./Json\";\n\ninterface Contributor {\n    contributions:number,\n    html_url: string,\n    login: string\n}\n\nfunction sortByContributions(x: Contributor, y: Contributor) {\n  return  y.contributions - x.contributions;\n}\n\nfunction renderList(targetDiv: string, data: Contributor[]) {\n    data.sort(sortByContributions);\n    var blockedUsers = new Array(\"gitter-badger\");\n    for(var n=0;n<data.length;n++){\n        var contributor = data[n];\n        if(blockedUsers.indexOf(contributor.login) == -1) {\n            var contributorDiv = document.createElement('div');\n            var contributorHtml = '<a href=\\\"' + contributor.html_url + '\\\" target=\\\"_blank\\\">';\n            contributorHtml += contributor.login;\n            contributorHtml += '</a></br>';\n            contributorDiv.innerHTML = contributorHtml;\n            document.getElementById(targetDiv).appendChild(contributorDiv);\n        }\n    }\n}\n\nfunction showContributionWidget(targetDiv: string, url: string): void {\n    var dataHandler = function(error: string, data: Contributor[]){\n        if (error !== null) {\n            console.log('Could not load data: ' + error);\n        } else {\n            renderList(targetDiv, data);\n        }\n    }\n    getJson(url, dataHandler);\n}\n(<any>window).showContributionWidget = showContributionWidget;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzb3VyY2UvSnNvbi50cyIsInNvdXJjZS9NYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FDQUEsaUJBQXdCLEFBQVEsS0FBRSxBQUFhO0FBQzdDLFFBQUksQUFBRyxNQUFHLElBQUksQUFBYyxBQUFFLEFBQUM7QUFDL0IsQUFBRyxRQUFDLEFBQUksS0FBQyxBQUFLLE9BQUUsQUFBRyxLQUFFLEFBQUksQUFBQyxBQUFDO0FBQzNCLEFBQUcsUUFBQyxBQUFZLGVBQUcsQUFBTSxBQUFDO0FBQzFCLEFBQUcsUUFBQyxBQUFNLFNBQUc7QUFDWCxZQUFJLEFBQU0sU0FBRyxBQUFHLElBQUMsQUFBTSxBQUFDO0FBQ3hCLEFBQUUsQUFBQyxZQUFDLEFBQU0sV0FBSyxBQUFHLEFBQUMsS0FBQyxBQUFDO0FBQ25CLEFBQVEscUJBQUMsQUFBSSxNQUFFLEFBQUcsSUFBQyxBQUFRLEFBQUMsQUFBQyxBQUMvQjtBQUFDLEFBQUMsQUFBSSxlQUFDLEFBQUM7QUFDTixBQUFRLHFCQUFDLEFBQU0sUUFBRSxBQUFHLElBQUMsQUFBUSxBQUFDLEFBQUMsQUFDakM7QUFBQyxBQUNIO0FBQUMsQUFBQztBQUNGLEFBQUcsUUFBQyxBQUFJLEFBQUUsQUFBQyxBQUNiO0FBQUM7QUFiRCxrQkFhQztBQUFBLEFBQUM7Ozs7OztBQ2JGLHFCQUFpQztBQVFqQyw2QkFBNkIsQUFBYyxHQUFFLEFBQWM7QUFDekQsQUFBTSxXQUFFLEFBQUMsRUFBQyxBQUFhLGdCQUFHLEFBQUMsRUFBQyxBQUFhLEFBQUMsQUFDNUM7QUFBQztBQUVELG9CQUFvQixBQUFpQixXQUFFLEFBQW1CO0FBQ3RELEFBQUksU0FBQyxBQUFJLEtBQUMsQUFBbUIsQUFBQyxBQUFDO0FBQy9CLFFBQUksQUFBWSxlQUFHLElBQUksQUFBSyxNQUFDLEFBQWUsQUFBQyxBQUFDO0FBQzlDLEFBQUcsU0FBQyxJQUFJLEFBQUMsSUFBQyxBQUFDLEdBQUMsQUFBQyxJQUFDLEFBQUksS0FBQyxBQUFNLFFBQUMsQUFBQyxBQUFFLEtBQUMsQUFBQztBQUMzQixZQUFJLEFBQVcsY0FBRyxBQUFJLEtBQUMsQUFBQyxBQUFDLEFBQUM7QUFDMUIsQUFBRSxZQUFDLEFBQVksYUFBQyxBQUFPLFFBQUMsQUFBVyxZQUFDLEFBQUssQUFBQyxVQUFJLENBQUMsQUFBQyxBQUFDLEdBQUMsQUFBQztBQUMvQyxnQkFBSSxBQUFjLGlCQUFHLEFBQVEsU0FBQyxBQUFhLGNBQUMsQUFBSyxBQUFDLEFBQUM7QUFDbkQsZ0JBQUksQUFBZSxrQkFBRyxBQUFZLGVBQUcsQUFBVyxZQUFDLEFBQVEsV0FBRyxBQUF1QixBQUFDO0FBQ3BGLEFBQWUsK0JBQUksQUFBVyxZQUFDLEFBQUssQUFBQztBQUNyQyxBQUFlLCtCQUFJLEFBQVcsQUFBQztBQUMvQixBQUFjLDJCQUFDLEFBQVMsWUFBRyxBQUFlLEFBQUM7QUFDM0MsQUFBUSxxQkFBQyxBQUFjLGVBQUMsQUFBUyxBQUFDLFdBQUMsQUFBVyxZQUFDLEFBQWMsQUFBQyxBQUFDLEFBQ25FO0FBQUMsQUFDTDtBQUFDLEFBQ0w7QUFBQztBQUVELGdDQUFnQyxBQUFpQixXQUFFLEFBQVc7QUFDMUQsUUFBSSxBQUFXLGNBQUcscUJBQVMsQUFBYSxPQUFFLEFBQW1CO0FBQ3pELEFBQUUsQUFBQyxZQUFDLEFBQUssVUFBSyxBQUFJLEFBQUMsTUFBQyxBQUFDO0FBQ2pCLEFBQU8sb0JBQUMsQUFBRyxJQUFDLEFBQXVCLDBCQUFHLEFBQUssQUFBQyxBQUFDLEFBQ2pEO0FBQUMsQUFBQyxBQUFJLGVBQUMsQUFBQztBQUNKLEFBQVUsdUJBQUMsQUFBUyxXQUFFLEFBQUksQUFBQyxBQUFDLEFBQ2hDO0FBQUMsQUFDTDtBQUFDO0FBQ0QsV0FBTyxRQUFDLEFBQUcsS0FBRSxBQUFXLEFBQUMsQUFBQyxBQUM5QjtBQUFDO0FBQ0ssQUFBTyxPQUFDLEFBQXNCLHlCQUFHLEFBQXNCLEFBQUMiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiZXhwb3J0IGZ1bmN0aW9uIGdldEpzb24odXJsOiBhbnksIGNhbGxiYWNrOiBhbnkpIHtcbiAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICB4aHIub3BlbignR0VUJywgdXJsLCB0cnVlKTtcbiAgeGhyLnJlc3BvbnNlVHlwZSA9ICdqc29uJztcbiAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdGF0dXMgPSB4aHIuc3RhdHVzO1xuICAgIGlmIChzdGF0dXMgPT09IDIwMCkge1xuICAgICAgY2FsbGJhY2sobnVsbCwgeGhyLnJlc3BvbnNlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2soc3RhdHVzLCB4aHIucmVzcG9uc2UpO1xuICAgIH1cbiAgfTtcbiAgeGhyLnNlbmQoKTtcbn07XG4iLCJpbXBvcnQgeyBnZXRKc29uIH0gZnJvbSBcIi4vSnNvblwiO1xuXG5pbnRlcmZhY2UgQ29udHJpYnV0b3Ige1xuICAgIGNvbnRyaWJ1dGlvbnM6bnVtYmVyLFxuICAgIGh0bWxfdXJsOiBzdHJpbmcsXG4gICAgbG9naW46IHN0cmluZ1xufVxuXG5mdW5jdGlvbiBzb3J0QnlDb250cmlidXRpb25zKHg6IENvbnRyaWJ1dG9yLCB5OiBDb250cmlidXRvcikge1xuICByZXR1cm4gIHkuY29udHJpYnV0aW9ucyAtIHguY29udHJpYnV0aW9ucztcbn1cblxuZnVuY3Rpb24gcmVuZGVyTGlzdCh0YXJnZXREaXY6IHN0cmluZywgZGF0YTogQ29udHJpYnV0b3JbXSkge1xuICAgIGRhdGEuc29ydChzb3J0QnlDb250cmlidXRpb25zKTtcbiAgICB2YXIgYmxvY2tlZFVzZXJzID0gbmV3IEFycmF5KFwiZ2l0dGVyLWJhZGdlclwiKTtcbiAgICBmb3IodmFyIG49MDtuPGRhdGEubGVuZ3RoO24rKyl7XG4gICAgICAgIHZhciBjb250cmlidXRvciA9IGRhdGFbbl07XG4gICAgICAgIGlmKGJsb2NrZWRVc2Vycy5pbmRleE9mKGNvbnRyaWJ1dG9yLmxvZ2luKSA9PSAtMSkge1xuICAgICAgICAgICAgdmFyIGNvbnRyaWJ1dG9yRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICB2YXIgY29udHJpYnV0b3JIdG1sID0gJzxhIGhyZWY9XFxcIicgKyBjb250cmlidXRvci5odG1sX3VybCArICdcXFwiIHRhcmdldD1cXFwiX2JsYW5rXFxcIj4nO1xuICAgICAgICAgICAgY29udHJpYnV0b3JIdG1sICs9IGNvbnRyaWJ1dG9yLmxvZ2luO1xuICAgICAgICAgICAgY29udHJpYnV0b3JIdG1sICs9ICc8L2E+PC9icj4nO1xuICAgICAgICAgICAgY29udHJpYnV0b3JEaXYuaW5uZXJIVE1MID0gY29udHJpYnV0b3JIdG1sO1xuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGFyZ2V0RGl2KS5hcHBlbmRDaGlsZChjb250cmlidXRvckRpdik7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmZ1bmN0aW9uIHNob3dDb250cmlidXRpb25XaWRnZXQodGFyZ2V0RGl2OiBzdHJpbmcsIHVybDogc3RyaW5nKTogdm9pZCB7XG4gICAgdmFyIGRhdGFIYW5kbGVyID0gZnVuY3Rpb24oZXJyb3I6IHN0cmluZywgZGF0YTogQ29udHJpYnV0b3JbXSl7XG4gICAgICAgIGlmIChlcnJvciAhPT0gbnVsbCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0NvdWxkIG5vdCBsb2FkIGRhdGE6ICcgKyBlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZW5kZXJMaXN0KHRhcmdldERpdiwgZGF0YSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0SnNvbih1cmwsIGRhdGFIYW5kbGVyKTtcbn1cbig8YW55PndpbmRvdykuc2hvd0NvbnRyaWJ1dGlvbldpZGdldCA9IHNob3dDb250cmlidXRpb25XaWRnZXQ7XG4iXX0="}