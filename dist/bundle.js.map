{"version":3,"sources":["node_modules/browser-pack/_prelude.js","source/Contributor.ts","source/ContributorWidget.ts","source/ContributorWidgetRenderer.ts","source/Json.ts","source/Main.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { ContributorJson } from \"./ContributorJson\";\n\nexport class Contributor {\n    contributions:number;\n    profileUrl: string;\n    name: string;\n\n    constructor(contributorJson: ContributorJson) {\n        this.name = contributorJson.login;\n        this.profileUrl = contributorJson.html_url;\n        this.contributions = contributorJson.contributions;\n    }\n\n    isOnList(userList: string[]): boolean {\n        if (userList.indexOf(this.name) == -1) {\n            return false;\n        }\n\n        return true;\n    }\n\n    getName(): string{\n        return this.name;\n    }\n\n    getProfileUrl(): string{\n        return this.profileUrl;\n    }\n\n    getContributions(): number{\n        return this.contributions;\n    }\n}\n","import { getJsonFromUrl } from \"./Json\";\nimport { getJsonCallback } from \"./Json\";\nimport { Contributor } from \"./Contributor\";\nimport { ContributorJson } from \"./ContributorJson\";\nimport { ContributorWidgetRenderer } from \"./ContributorWidgetRenderer\";\n\nexport class ContributorWidget {\n    configJson: any;\n    contributorsJson: Contributor[];\n    renderer: ContributorWidgetRenderer;\n\n    constructor() {\n        this.renderer = new ContributorWidgetRenderer(); \n        var widgetDivs = document.getElementsByClassName(\"gh-contrib-widget\");\n        for(var i = 0; i < widgetDivs.length; i++) {\n            var targetDiv = widgetDivs.item(i);\n            this.loadData(targetDiv);\n        }\n    }\n\n    loadData(targetDiv: any): void {\n        var jsonUrl: string =\n            'https://api.github.com/repos/' + targetDiv.dataset.repository + '/contributors';\n        var dataHandler = function(renderer: ContributorWidgetRenderer, error: string, data: ContributorJson[]){\n            if (error !== null) {\n                console.log('Could not load data: ' + error);\n            } else {\n                renderer.render(targetDiv, data);\n            }\n        }\n        getJsonCallback(this.renderer, jsonUrl, dataHandler);\n    }\n}\n","import { getJsonFromUrl } from \"./Json\";\nimport { getJsonCallback } from \"./Json\";\nimport { ContributorJson } from \"./ContributorJson\";\nimport { Contributor } from \"./Contributor\";\n\nfunction sortByContributions(x: ContributorJson, y: ContributorJson) {\n  return  y.contributions - x.contributions;\n}\n\nexport class ContributorWidgetRenderer {\n    contributorsJson: ContributorJson[];\n\n    render(targetDiv: any, contributors: ContributorJson[]): void {\n        if (targetDiv != null) {\n        contributors.sort(sortByContributions);\n        var blockedUsers = new Array(\"gitter-badger\");\n            for(var n=0;n<contributors.length;n++){\n                var contributor: Contributor;\n                contributor = new Contributor(contributors[n])\n            if(!contributor.isOnList(blockedUsers)) {\n                var contributorDiv = document.createElement('div');\n                var contributorHtml = '<a href=\\\"' + contributor.getProfileUrl() + '\\\" target=\\\"_blank\\\">';\n                contributorHtml += contributor.getName();\n                contributorHtml += '</a></br>';\n                contributorDiv.innerHTML = contributorHtml;\n                targetDiv.appendChild(contributorDiv);\n            }\n        }\n    } else {\n        console.log('Target div not found.');\n    }\n    }\n}\n","export function getJsonCallback(widget: any, url: any, callback: any) {\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', url, true);\n  xhr.responseType = 'json';\n  xhr.onload = function() {\n    var status = xhr.status;\n    if (status === 200) {\n        callback(widget, null, xhr.response);\n    } else {\n        callback(widget, status, xhr.response);\n    }\n  };\n  xhr.send();\n};\n\nexport function getJsonFromUrl(url: string): any {\n    var xhr = new XMLHttpRequest();\n\n    xhr.open('GET', url, true);\n    xhr.responseType = 'json';\n    xhr.onload = function() {\n        var status = xhr.status;\n        if (status !== 200) {\n            throw new Error('Got error ' + status + ' for URL ' + url);\n        }\n    };\n    xhr.send();\n};\n","import { getJsonFromUrl } from \"./Json\";\nimport { ContributorWidget } from \"./ContributorWidget\";\n\nfunction installGithubContributorWidget(): void {\n    try {\n        var widget: ContributorWidget = new ContributorWidget();\n    } catch (e) {\n        console.log(e.name + ': ' + e.message);\n    }\n}\n\n(<any>window).installGithubContributorWidget = installGithubContributorWidget;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}